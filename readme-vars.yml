---

# project information
project_name: quassel-core
project_url: "http://quassel-irc.org/"
project_logo: "http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core.

  This container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# development version
development_versions: false

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_net: false
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London." }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "<path to data>", desc: "Database and quassel-core configuration storage." }
param_usage_include_ports: true
param_ports:
  - { external_port: "4242", internal_port: "4242", port_desc: "The port quassel-core listens for connections on." }
param_device_map: false
cap_add_param: false

# optional container parameters
opt_param_usage_include_env: true
opt_param_env_vars:
  - { env_var: "RUN_OPTS", env_value: "--config-from-environment", desc: "Custom CLI options for Quassel" }
opt_param_usage_include_vols: false
opt_param_usage_include_ports: true
opt_param_ports:
  - { external_port: "113", internal_port: "10113", port_desc: "Optional Ident Port" }
opt_param_device_map: false
opt_cap_add_param: false
optional_block_1: false

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Quassel wiki: [quassel](http://bugs.quassel-irc.org/projects/quassel-irc/wiki)

  A great place to host a quassel instance is a VPS, such as [DigitalOcean](https://www.digitalocean.com/?refcode=501c48b34b8c). For $5 a month you can have a 24/7 IRC connection and be up and running in under 55 seconds (or so they claim).

  Once you have the container running, fire up a quassel desktop client and connect to your new core instance using your droplets public IP address and the port you specified in your `docker run` command *default: 4242*. Create an admin user, select SQLite as your storage backend (Quassel limitation). Setup your real name and nick, then press `Save & Connect`.

  You're now connected to IRC. Let's add you to our [IRC](http://www.linuxserver.io/index.php/irc/) `#linuxserver.io` room on Freenode. Click 'File' > 'Networks' > 'Configure Networks' > 'Add' (under Networks section, not Servers) > 'Use preset' > Select 'Freenode' and then configure your identity using the tabs in the 'Network details' section. Once connected to Freenode, click `#join` and enter `#linuxserver.io`. That's it, you're done.

  ## Stateless usage

  To use Quassel in stateless mode, where it needs to be configured through
  environment arguments, run it with the `--config-from-environment` RUN_OPTS environment setting.

  | Env | Usage |
  | :----: | --- |
  | DB_BACKEND | `SQLite` or `PostgreSQL` |
  | DB_PGSQL_USERNAME | PostgreSQL User |
  | DB_PGSQL_PASSWORD | PostgreSQL Password |
  | DB_PGSQL_HOSTNAME | PostgreSQL Host |
  | DB_PGSQL_PORT | PostgreSQL Port |
  | AUTH_AUTHENTICATOR | `Database` or `LDAP` |
  | AUTH_LDAP_HOSTNAME | LDAP Host |
  | AUTH_LDAP_PORT | LDAP Port |
  | AUTH_LDAP_BIND_DN | LDAP Bind Domain |
  | AUTH_LDAP_BIND_PASSWORD | LDAP Password |
  | AUTH_LDAP_FILTER | LDAP Authentication Filters |
  | AUTH_LDAP_UID_ATTRIBUTE | LDAP UID |

  Additionally you have RUN_OPTS that can be used to customize pathing and behvior.

  | Option | Example |
  | :----: | --- |
  | --strict-ident | strictly bool `--strict-ident` |
  | --ident-daemon | strictly bool `--ident-daemon` |
  | --ident-port | `--ident-port "10113"` |
  | --ident-listen | `--ident-listen "::,0.0.0.0"` |
  | --ssl-cert | `--ssl-cert /config/keys/cert.crt` |
  | --ssl-key | `--ssl-key /config/keys/cert.key` |
  | --require-ssl | strictly bool `--require-ssl` |

  Minimal example with SQLite:

  ```
  docker create \
    --name=quassel-core \
    -e PUID=1000 \
    -e PGID=1000 \
    -e TZ=Europe/London \
    -e RUN_OPTS='--config-from-environment' \
    -e DB_BACKEND=SQLite \
    -e AUTH_AUTHENTICATOR=Database \
    -p 4242:4242 \
    -v <path to data>:/config \
    --restart unless-stopped \
    linuxserver/quassel-core
  ```


# changelog
changelogs:
  - { date: "19.12.19:", desc: "Rebasing to alpine 3.11." }
  - { date: "28.06.19:", desc: "Rebasing to alpine 3.10." }
  - { date: "23.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "20.03.19:", desc: "Make stateless operation an option, with input from one of the quassel team." }
  - { date: "26.01.19:", desc: "Add pipeline logic and multi arch." }
  - { date: "08.01.19:", desc: "Rebase to Ubuntu Bionic and upgrade to Quassel`0.13.0` See [here.](https://quassel-irc.org/node/134)." }
  - { date: "30.07.18:", desc: "Rebase to alpine:3.8 and use buildstage." }
  - { date: "03.01.18:", desc: "Deprecate cpu_core routine lack of scaling." }
  - { date: "09.12.17:", desc: "Rebase to alpine:3.7." }
  - { date: "26.11.17:", desc: "Use cpu core counting routine to speed up build time." }
  - { date: "12.07.17:", desc: "Add inspect commands to README, move to jenkins build and push." }
  - { date: "27.05.17:", desc: "Rebase to alpine:3.6." }
  - { date: "13.05.17:", desc: "Switch to git source." }
  - { date: "28.12.16:", desc: "Rebase to alpine:3.5." }
  - { date: "23.11.16:", desc: "Rebase to alpine:edge." }
  - { date: "23.09.16:", desc: "Use QT5 dependencies (thanks bauerj)." }
  - { date: "10.09.16:", desc: "Add layer badges to README." }
  - { date: "28.08.16:", desc: "Add badges to README." }
  - { date: "10.08.16:", desc: "Rebase to xenial." }
  - { date: "14.10.15:", desc: "Removed the webui, turned out to be to unstable for most usecases." }
  - { date: "01.09.15:", desc: "Fixed mistake in README." }
  - { date: "30.07.15:", desc: "Switched to internal baseimage, and fixed a bug with updating the webinterface." }
  - { date: "06.07.15:", desc: "Enabled BLOWFISH encryption and added a (optional) webinterface, for the times you dont have access to your client." }
